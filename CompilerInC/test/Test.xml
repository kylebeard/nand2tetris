<class>
    <classVarDec>
        <keyword> static </keyword>
        <keyword> int </keyword>
        <identifier> x </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <classVarDec>
        <keyword> field </keyword>
        <keyword> char </keyword>
        <identifier> y </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <classVarDec>
        <keyword> static </keyword>
        <keyword> boolean </keyword>
        <identifier> x </identifier>
        <symbol> , </symbol>
        <identifier> y </identifier>
        <symbol> , </symbol>
        <identifier> z </identifier>
        <symbol> , </symbol>
        <identifier> a </identifier>
        <symbol> , </symbol>
        <identifier> b </identifier>
        <symbol> , </symbol>
        <identifier> c </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <classVarDec>
        <keyword> field </keyword>
        <identifier> Point </identifier>
        <identifier> p1 </identifier>
        <symbol> , </symbol>
        <identifier> p2 </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <subroutineDec>
        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> x </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> int </keyword>
            <identifier> y </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> function </keyword>
        <keyword> char </keyword>
        <identifier> hi </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> char </keyword>
            <identifier> x </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> constructor </keyword>
        <keyword> int </keyword>
        <identifier> y </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> boolean </keyword>
            <identifier> z </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> method </keyword>
        <identifier> AClass </identifier>
        <identifier> z </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <identifier> Point </identifier>
            <identifier> p1 </identifier>
            <symbol> , </symbol>
            <identifier> Point </identifier>
            <identifier> p2 </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> function </keyword>
        <keyword> boolean </keyword>
        <identifier> b </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> int </keyword>
            <identifier> x </identifier>
            <symbol> , </symbol>
            <keyword> int </keyword>
            <identifier> y </identifier>
            <symbol> , </symbol>
            <keyword> int </keyword>
            <identifier> z </identifier>
            <symbol> , </symbol>
            <keyword> char </keyword>
            <identifier> a </identifier>
            <symbol> , </symbol>
            <keyword> boolean </keyword>
            <identifier> b </identifier>
            <symbol> , </symbol>
            <identifier> SomeClass </identifier>
            <identifier> sc </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
</class>